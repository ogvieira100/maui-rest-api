para funcionar o compose na api 
coloque o docker file no caminho da solution 
adicionando as tags
#See https://aka.ms/customizecontainer to learn how to customize your debug container and how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/aspnet:7.0 AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443

FROM mcr.microsoft.com/dotnet/sdk:7.0 AS build
WORKDIR /src
COPY ["./api/api.csproj", "api/"]
COPY ["./data/data.csproj", "data/"]-> projeto 
COPY ["./domain/domain.csproj", "domain/"] ->projeto
RUN dotnet restore "api/api.csproj"
COPY . .
WORKDIR "/src/api"
RUN dotnet build "api.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "api.csproj" -c Release -o /app/publish /p:UseAppHost=false

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "api.dll"]

lembrando que docker não lê diretorios acima 

para habilidar debug localhost android e ios 

1º -> https://learn.microsoft.com/pt-br/dotnet/maui/data-cloud/local-web-services
2º -> https://mattruma.com/debugging-net-core-api-on-android-device/

